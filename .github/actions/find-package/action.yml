name: 'Find Package'
description: 'Finds the correct package file based on architecture and package type'

inputs:
  pgver:
    description: 'PostgreSQL version (e.g., pg17)'
    required: true
  arch:
    description: 'Target architecture (amd64 or arm64)'
    required: true
  package_type:
    description: 'Package type (deb or rpm)'
    required: true
  artifacts_path:
    description: 'Path where artifacts are located'
    required: false
    default: './artifacts'

outputs:
  package_file:
    description: 'Path to the found package file'
    value: ${{ steps.find.outputs.package_file }}
  deb_arch:
    description: 'Architecture name for DEB packages'
    value: ${{ steps.find.outputs.deb_arch }}
  rpm_arch:
    description: 'Architecture name for RPM packages'
    value: ${{ steps.find.outputs.rpm_arch }}

runs:
  using: "composite"
  steps:
    - name: List available artifacts
      run: |
        echo "Available artifacts in ${{ inputs.artifacts_path }}:"
        find ${{ inputs.artifacts_path }} -type f | sort
        echo ""
        echo "Looking for packages matching: ${{ inputs.pgver }} ${{ inputs.arch }} ${{ inputs.package_type }}"
      shell: bash

    - name: Find package file
      id: find
      run: |
        PG_VERSION=$(echo "${{ inputs.pgver }}" | sed 's/^pg//')
        echo "PG_VERSION=$PG_VERSION" >> $GITHUB_OUTPUT
        # Determine architecture names for packages
        case "${{ inputs.arch }}" in
          amd64)
            DEB_ARCH="amd64"
            RPM_ARCH="x86_64"
            ;;
          arm64)
            DEB_ARCH="arm64"
            RPM_ARCH="aarch64"
            ;;
          *)
            DEB_ARCH="${{ inputs.arch }}"
            RPM_ARCH="${{ inputs.arch }}"
            ;;
        esac

        echo "DEB architecture: $DEB_ARCH"
        echo "RPM architecture: $RPM_ARCH"
        echo "deb_arch=$DEB_ARCH" >> $GITHUB_OUTPUT
        echo "rpm_arch=$RPM_ARCH" >> $GITHUB_OUTPUT

        # Find the package file
        if [ "${{ inputs.package_type }}" = "deb" ]; then
          PACKAGE_FILE=$(find ${{ inputs.artifacts_path }} -name "*_${PG_VERSION}*${DEB_ARCH}.deb" | head -1)
        else
          PACKAGE_FILE=$(find ${{ inputs.artifacts_path }} -name "*_${PG_VERSION}*${RPM_ARCH}.rpm" | head -1)
        fi

        if [ -z "$PACKAGE_FILE" ]; then
          echo "❌ ERROR: Package not found for ${{ inputs.package_type }} ${{ inputs.arch }} ${PG_VERSION}"
          echo ""
          echo "Available packages for ${PG_VERSION}:"
          find ${{ inputs.artifacts_path }} -name "*_${PG_VERSION}*" || echo "No packages found for ${PG_VERSION}"
          echo ""
          echo "All available packages:"
          find ${{ inputs.artifacts_path }} -name "*.deb" -o -name "*.rpm" || echo "No packages found at all"
          exit 1
        fi

        echo "✅ Found package: $PACKAGE_FILE"
        echo "package_file=$PACKAGE_FILE" >> $GITHUB_OUTPUT
      shell: bash

name: 'Install Package'
description: 'Installs DEB or RPM package'

inputs:
  package_file:
    description: 'Path to the package file to install'
    required: true
  package_type:
    description: 'Package type (deb or rpm)'
    required: true
  pgver:
    description: 'PostgreSQL version (e.g., pg17)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install DEB package
      if: inputs.package_type == 'deb'
      run: |
        echo "📦 Installing DEB package: ${{ inputs.package_file }}"

        # Show package info
        echo "Package information:"
        dpkg --info "${{ inputs.package_file }}" || echo "Could not show package info"
        echo ""

        # Install the package
        echo "Installing package..."
        sudo dpkg -i "${{ inputs.package_file }}" || {
          echo "⚠️ dpkg install had issues, trying to fix dependencies..."
          sudo apt-get install -f -y
        }

        # Verify installation
        echo "Verifying installation..."
        dpkg -l | grep pglinter || echo "Package not found in dpkg list"

        # Verify files are installed
        PG_VERSION=$(echo "${{ inputs.pgver }}" | sed 's/pg//')
        echo "Checking for extension files for PostgreSQL $PG_VERSION:"
        ls -la /usr/share/postgresql/${PG_VERSION}/extension/pglinter* || echo "Extension files not found"
        ls -la /usr/lib/postgresql/${PG_VERSION}/lib/pglinter.so || echo "Library not found"

        echo "✅ DEB package installation completed"
      shell: bash

    - name: Install RPM package (converted to DEB)
      if: inputs.package_type == 'rpm'
      run: |
        echo "📦 Converting and installing RPM package: ${{ inputs.package_file }}"

        # Show package info
        echo "RPM package information:"
        rpm -qip "${{ inputs.package_file }}" || echo "Could not show RPM package info"
        echo ""

        # Convert RPM to DEB
        echo "Converting RPM to DEB..."
        sudo alien --to-deb --scripts "${{ inputs.package_file }}"

        # Find the converted DEB file
        DEB_FILE=$(ls *.deb | head -1)
        echo "Converted DEB file: $DEB_FILE"

        if [ -z "$DEB_FILE" ]; then
          echo "❌ ERROR: No DEB file was created from RPM conversion"
          exit 1
        fi

        # Show converted package info
        echo "Converted package information:"
        dpkg --info "$DEB_FILE" || echo "Could not show converted package info"
        echo ""

        # Install the converted DEB
        echo "Installing converted package..."
        sudo dpkg -i "$DEB_FILE" || {
          echo "⚠️ dpkg install had issues, trying to fix dependencies..."
          sudo apt-get install -f -y
        }

        # Verify installation
        echo "Verifying installation..."
        dpkg -l | grep pglinter || echo "Package not found in dpkg list"

        # Verify files are installed (check multiple possible paths)
        PG_VERSION=$(echo "${{ inputs.pgver }}" | sed 's/pg//')
        echo "Checking for extension files for PostgreSQL $PG_VERSION:"

        # Check PGDG paths (where RPM packages typically install)
        ls -la /usr/pgsql-${PG_VERSION}/share/extension/pglinter* 2>/dev/null || echo "Extension files not found in PGDG path"
        ls -la /usr/pgsql-${PG_VERSION}/lib/pglinter.so 2>/dev/null || echo "Library not found in PGDG path"

        # Check standard Debian paths (where alien might move files)
        ls -la /usr/share/postgresql/${PG_VERSION}/extension/pglinter* 2>/dev/null || echo "Extension files not found in standard path"
        ls -la /usr/lib/postgresql/${PG_VERSION}/lib/pglinter.so 2>/dev/null || echo "Library not found in standard path"

        # Show all pglinter files for debugging
        echo "All pglinter files found:"
        sudo find /usr -name "pglinter*" 2>/dev/null || echo "No pglinter files found"

        echo "✅ RPM package conversion and installation completed"
      shell: bash

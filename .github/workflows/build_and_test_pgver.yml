# GitHub Actions workflow converted from GitLab CI template
# Original: .gitlab/job_templates/build_and_test_pgver.yml

name: 'Build and Test PostgreSQL Version'

on:
  workflow_call:
    inputs:
      always:
        description: 'If defined, all jobs are launched in any case. Usually you want at least 1 major version to be built/tested on all pipelines.'
        type: string
        default: ''
        required: false
      pgver:
        description: 'The PostgreSQL major version with the "pg" prefix (e.g. `pg13`, `pg16`, etc.)'
        type: string
        required: true

env:
  PGVER: ${{ inputs.pgver }}
  ALWAYS: ${{ inputs.always }}

jobs:
  ##
  ## B U I L D
  ##
  build:
    name: 'build-${{ inputs.pgver }}'
    runs-on: ubuntu-latest
    # Use GitHub Container Registry for pmpetit
    container: ghcr.io/pmpetit/postgresql_pglinter:pgrx

    # Convert GitLab rules to GitHub Actions conditions
    if: |
      inputs.always != '' ||
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      github.ref == github.event.repository.default_branch ||
      startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint (only for default PG version)
        if: inputs.always != ''
        run: make lint

      - name: Build the extension package
        run: make

      - name: Launch postgres instance and run unit tests
        run: make test
        # The functional tests will be launched later with pg_regress

      - name: Build packages
        run: |
          make deb
          make rpm

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'pglinter-${{ inputs.pgver }}'
          path: 'target/release/pglinter-${{ inputs.pgver }}'
          retention-days: 1

  ##
  ## T E S T
  ##
  installcheck:
    name: 'installcheck-${{ inputs.pgver }}'
    runs-on: ubuntu-latest
    needs: build
    container: ghcr.io/pmpetit/postgresql_pglinter:pgrx

    if: |
      inputs.always != '' ||
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      github.ref == github.event.repository.default_branch ||
      startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'pglinter-${{ inputs.pgver }}'
          path: 'target/release/pglinter-${{ inputs.pgver }}'

      - name: Install binaries
        run: make install

      - name: Run functional tests with pg_regress
        run: make installcheck

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'test-results-${{ inputs.pgver }}'
          path: |
            target/release/pglinter-${{ inputs.pgver }}
            results
          retention-days: 1

  ##
  ## D E P L O Y
  ##
  upload-packages:
    name: 'upload-packages-${{ inputs.pgver }}'
    runs-on: ubuntu-latest
    needs: build

    # Convert GitLab rules: run on tags always, otherwise manual
    if: |
      startsWith(github.ref, 'refs/tags/') ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'pglinter-${{ inputs.pgver }}'
          path: 'target/release/pglinter-${{ inputs.pgver }}'

      - name: Upload DEB package to GitHub Releases
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: 'target/release/pglinter-${{ inputs.pgver }}/*.deb'
          name: 'pglinter_${{ inputs.pgver }}-${{ github.ref_name }}.amd64.deb'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload RPM package to GitHub Releases
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: 'target/release/pglinter-${{ inputs.pgver }}/*.rpm'
          name: 'pglinter_${{ inputs.pgver }}-${{ github.ref_name }}.x86_64.rpm'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ##
  ## R E L E A S E
  ##
  release-packages:
    name: 'release-packages-${{ inputs.pgver }}'
    runs-on: ubuntu-latest
    needs: [build, upload-packages]

    # Only run on tags
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Create Release Entry
        run: echo "Release ${{ github.ref_name }} created for ${{ inputs.pgver }}"
        # Note: GitHub Releases are automatically created when using softprops/action-gh-release
        # The actual release creation is handled by the upload-packages job

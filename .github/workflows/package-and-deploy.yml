# as main is protected, you can't commit into without a PR.
# So in main only validated PR are accepted.
# So build and test were run during the merge request process.
# So don't need to run twice the build and test workflow when releasing...
#
# Note: PGXN publishing is handled by a separate workflow (pgxn-publish.yml)
# which automatically triggers when a release is published.

name: 'Package and deploy pglinter.'

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'README.md'
      - 'mkdocs.yml'

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.0.17)'
        required: true
        type: string
      pgversions:
        description: 'PostgreSQL versions to build (comma-separated: pg13,pg14,pg15,pg16,pg17,pg18)'
        required: false
        default: 'pg13,pg14,pg15,pg16,pg17,pg18'
        type: string
      create_release:
        description: 'Create GitHub release'
        required: false
        default: true
        type: boolean
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean
      draft:
        description: 'Create as draft'
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PGLINTER_MINOR_VERSION: ${{ github.ref_name }}

jobs:
  ##
  ## B U I L D / T E S T / P A C K A G E & D E P L O Y
  ##
  build:
    strategy:
      matrix:
        pgver: [pg13,pg14,pg15,pg16,pg17,pg18]
      fail-fast: false
    name: 'package-and-deploy-pglinter-${{ github.ref_name }}-for-${{ matrix.pgver }}'
    runs-on: ubuntu-latest
    # Use GitHub Container Registry for pmpetit
    container:
      image: ghcr.io/pmpetit/postgresql_pglinter:pgrx
      options: --user root
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Call reusable package action
        uses: ./.github/actions/reusable-package-action
        with:
          pgver: ${{ matrix.pgver }}
          tag: ${{ github.ref_name }}

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create Release with Artifacts
        uses: ./.github/actions/reusable-release-action
        with:
          tag: ${{ github.ref_name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          draft: false

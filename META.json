{
  "name": "pglinter",
  "abstract": "PostgreSQL Database Linting and Analysis Extension",
  "description": "A comprehensive PostgreSQL extension for analyzing databases to identify potential issues, performance problems, and best practice violations. Originally based on the Python pglinter, this Rust implementation provides better performance, deep PostgreSQL integration, SARIF output support, and YAML-based rule configuration management.",
  "version": "0.0.19",
  "maintainer": [
    "Pierre-Marie Petit <pmpetit@users.noreply.github.com>"
  ],
  "license": "postgresql",
  "prereqs": {
    "runtime": {
      "requires": {
        "PostgreSQL": "13.0.0"
      },
      "recommends": {
        "PostgreSQL": "17.0.0"
      }
    },
    "build": {
      "requires": {
        "PostgreSQL": "13.0.0"
      }
    },
    "test": {
      "requires": {
        "PostgreSQL": "13.0.0"
      }
    }
  },
  "provides": {
    "pglinter": {
      "abstract": "PostgreSQL Database Linting and Analysis Extension",
      "file": "sql/pglinter--0.0.17.sql",
      "version": "0.0.17"
    }
  },
  "resources": {
    "homepage": "https://github.com/pmpetit/pglinter",
    "bugtracker": {
      "web": "https://github.com/pmpetit/pglinter/issues"
    },
    "repository": {
      "url": "git://github.com/pmpetit/pglinter.git",
      "web": "https://github.com/pmpetit/pglinter",
      "type": "git"
    }
  },
  "generated_by": "Pierre-Marie Petit",
  "meta-spec": {
    "version": "1.0.0",
    "url": "https://pgxn.org/meta/spec.txt"
  },
  "tags": [
    "analysis",
    "linting",
    "database quality",
    "performance",
    "best practices",
    "sarif",
    "yaml",
    "configuration management",
    "rule management",
    "rust",
    "pgrx",
    "postgresql extension",
    "database health",
    "schema analysis",
    "index optimization",
    "foreign keys",
    "primary keys",
    "import export"
  ],
  "no_index": {
    "file": [
      "src/rules.sql"
    ],
    "directory": [
      "src/private",
      "target/",
      "docs/dev/",
      "sql/test/",
      "tests/expected/",
      "coverage/"
    ]
  },
  "release_status": "stable"
}

-- Test for pglinter B002 rule: No Redundant indexes exists, no warning should be raised.
CREATE EXTENSION pglinter;
BEGIN;
-- Create test tables with redundant indexes
CREATE TABLE IF NOT EXISTS test_table_without_redundant_indexes (
    id INT PRIMARY KEY,
    name TEXT,
    email VARCHAR(255),
    status VARCHAR(50),
    created_at TIMESTAMP DEFAULT NOW()
);
-- Create table with one index and a unique constrainte on the same column
CREATE TABLE IF NOT EXISTS orders_table_with_constraint (
    order_id SERIAL PRIMARY KEY,
    customer_id INT UNIQUE,
    product_name VARCHAR(255),
    order_date DATE,
    amount DECIMAL(10, 2)
);
-- Create another table for more redundant index scenarios
CREATE TABLE IF NOT EXISTS orders_table (
    order_id SERIAL PRIMARY KEY,
    customer_id INT,
    product_name VARCHAR(255),
    order_date DATE,
    amount DECIMAL(10, 2)
);
-- First, disable all rules to isolate B001 testing
SELECT pglinter.disable_all_rules() AS all_rules_disabled;
NOTICE:  üî¥ Disabled 20 rule(s)
 all_rules_disabled 
--------------------
                 20
(1 row)

-- Enable only B002 for focused testing
SELECT pglinter.enable_rule('B002') AS b001_enabled;
NOTICE:  ‚úÖ Rule B002 has been enabled
 b001_enabled 
--------------
 t
(1 row)

-- Test with file output
SELECT pglinter.perform_base_check('/tmp/pglinter_b002_results.sarif');
 perform_base_check 
--------------------
 t
(1 row)

-- Test if file exists and show checksum
\! md5sum /tmp/pglinter_b002_results.sarif
7cd6073b52ee9a1173c05c016e2458f4  /tmp/pglinter_b002_results.sarif
-- Test with no output file (should output to prompt)
SELECT pglinter.perform_base_check();
NOTICE:  ‚úÖ No issues found - database schema looks good!
 perform_base_check 
--------------------
 t
(1 row)

-- Test rule management for B002
SELECT pglinter.explain_rule('B002');
NOTICE:  üìñ Rule Explanation for B002
============================================================

üéØ Rule Name: HowManyRedudantIndex
üìã Scope: BASE

üìù Description:
Count number of redundant index vs nb index.

‚ö†Ô∏è  Message Template:
{0}/{1} redundant(s) index exceed the {2} threshold: {3}%.

üîß How to Fix:
   1. remove duplicated index or check if a constraint does not create a redundant index, or change warning/error threshold
============================================================
 explain_rule 
--------------
 t
(1 row)

-- Show that B002 is enabled
SELECT pglinter.is_rule_enabled('B002') AS b002_enabled;
 b002_enabled 
--------------
 t
(1 row)

-- Disable B002 temporarily and test
SELECT pglinter.disable_rule('B002') AS b002_disabled;
NOTICE:  üî¥ Rule B002 has been disabled
 b002_disabled 
---------------
 t
(1 row)

SELECT pglinter.perform_base_check();
NOTICE:  ‚úÖ No issues found - database schema looks good!
 perform_base_check 
--------------------
 t
(1 row)

ROLLBACK;
DROP EXTENSION pglinter CASCADE;

-- Comprehensive test for pglinter C003 rule: MD5 encrypted passwords
-- This script tests the detection of MD5 password encryption which is deprecated and insecure
-- Note: MD5 password encryption was removed in PostgreSQL 18
-- Check PostgreSQL version and exit if version 18 or higher
\set pg_version_num `psql -t -A -c "SELECT current_setting('server_version_num')::integer;"`
psql: error: FATAL:  database "pmp" does not exist
\if :pg_version_num >= 180000
unrecognized value " >= 180000" for "\if expression": Boolean expected
    \echo 'NOTICE: Skipping C003 test - MD5 password encryption is not supported in PostgreSQL 18+'
    \echo 'NOTICE: Current PostgreSQL version:' `psql -t -A -c "SELECT version();"`
    \q
\endif
\echo 'NOTICE: PostgreSQL version supports MD5 - proceeding with C003 test'
NOTICE: PostgreSQL version supports MD5 - proceeding with C003 test
CREATE EXTENSION pglinter;
BEGIN;
\pset pager off
SELECT 'Testing C003 rule - MD5 password encryption checks...' AS test_info;
                       test_info                       
-------------------------------------------------------
 Testing C003 rule - MD5 password encryption checks...
(1 row)

-- First, disable all rules to isolate C003 testing
SELECT pglinter.disable_all_rules() AS all_rules_disabled;
NOTICE:  üî¥ Disabled 21 rule(s)
 all_rules_disabled 
--------------------
                 21
(1 row)

-- Enable only C003 for focused testing
SELECT pglinter.enable_rule('C003') AS c003_enabled;
NOTICE:  ‚úÖ Rule C003 has been enabled
 c003_enabled 
--------------
 t
(1 row)

-- Verify C003 is enabled
SELECT pglinter.is_rule_enabled('C003') AS c003_status;
 c003_status 
-------------
 t
(1 row)

-- Test 1: Check current password_encryption setting
SELECT '=== Test 1: Current password_encryption setting ===' AS test_section;
                    test_section                     
-----------------------------------------------------
 === Test 1: Current password_encryption setting ===
(1 row)

SELECT name, setting, context
FROM pg_settings
WHERE name = 'password_encryption';
        name         | setting | context 
---------------------+---------+---------
 password_encryption | md5     | user
(1 row)

-- Test 2: Run C003 check with current settings
SELECT '=== Test 2: C003 Rule Execution ===' AS test_section;
            test_section             
-------------------------------------
 === Test 2: C003 Rule Execution ===
(1 row)

SELECT pglinter.perform_cluster_check();
NOTICE:  üîç pglinter found 1 issue(s):
NOTICE:  ==================================================
NOTICE:  ‚ùå [C003] ERROR: 1 password(s) encrypted with MD5 exceed the warning threshold: 1.
NOTICE:  ==================================================
NOTICE:  üìä Summary: 1 error(s), 0 warning(s), 0 info
NOTICE:  üî¥ Critical issues found - please review and fix errors
 perform_cluster_check 
-----------------------
 t
(1 row)

-- Test 3: Rule explanation
SELECT '=== Test 3: C003 Rule Explanation ===' AS test_section;
             test_section              
---------------------------------------
 === Test 3: C003 Rule Explanation ===
(1 row)

SELECT pglinter.explain_rule('C003') AS rule_explanation;
NOTICE:  üìñ Rule Explanation for C003
============================================================

üéØ Rule Name: PasswordEncryptionIsMd5
üìã Scope: CLUSTER

üìù Description:
This configuration is not secure anymore and will prevent an upgrade to Postgres 18. Warning, you will need to reset all passwords after this is changed to scram-sha-256.

‚ö†Ô∏è  Message Template:
{0} password(s) encrypted with MD5 exceed the warning threshold: {1}.

üîß How to Fix:
   1. change password_encryption parameter to scram-sha-256. Warning, you will need to reset all passwords after this parameter is updated.
============================================================
 rule_explanation 
------------------
 t
(1 row)

-- Test 4: Rule details
SELECT '=== Test 4: C003 Rule Details ===' AS test_section;
           test_section            
-----------------------------------
 === Test 4: C003 Rule Details ===
(1 row)

SELECT code, name, description, message, fixes
FROM pglinter.rules
WHERE code = 'C003';
 code |          name           |                                                                                description                                                                                 |                                message                                |                                                                   fixes                                                                   
------+-------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------
 C003 | PasswordEncryptionIsMd5 | This configuration is not secure anymore and will prevent an upgrade to Postgres 18. Warning, you will need to reset all passwords after this is changed to scram-sha-256. | {0} password(s) encrypted with MD5 exceed the warning threshold: {1}. | {"change password_encryption parameter to scram-sha-256. Warning, you will need to reset all passwords after this parameter is updated."}
(1 row)

-- Test 5: Show the actual query used by C003
SELECT '=== Test 5: C003 Query Details ===' AS test_section;
            test_section            
------------------------------------
 === Test 5: C003 Query Details ===
(1 row)

SELECT code, q1 as query
FROM pglinter.rules
WHERE code = 'C003';
 code |              query               
------+----------------------------------
 C003 |                                 +
      | SELECT count(*) FROM            +
      | pg_catalog.pg_settings          +
      | WHERE name='password_encryption'+
      | 
(1 row)

-- Test 6: Manual execution of C003 query to understand results
SELECT '=== Test 6: Manual C003 Query Execution ===' AS test_section;
                test_section                 
---------------------------------------------
 === Test 6: Manual C003 Query Execution ===
(1 row)

SELECT count(*) as md5_password_count
FROM pg_catalog.pg_settings
WHERE name='password_encryption' AND setting='md5';
 md5_password_count 
--------------------
                  1
(1 row)

-- Test 7: Export results to SARIF format
SELECT '=== Test 7: Export to SARIF ===' AS test_section;
          test_section           
---------------------------------
 === Test 7: Export to SARIF ===
(1 row)

SELECT pglinter.perform_base_check('/tmp/pglinter_c003_results.sarif');
 perform_base_check 
--------------------
 t
(1 row)

-- Show checksum of generated file if it exists
\! test -f /tmp/pglinter_c003_results.sarif && md5sum /tmp/pglinter_c003_results.sarif || echo "SARIF file not generated"
7cd6073b52ee9a1173c05c016e2458f4  /tmp/pglinter_c003_results.sarif
ROLLBACK;
DROP EXTENSION pglinter CASCADE;

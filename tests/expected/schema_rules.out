-- Test for pglinter schema-level rules
-- This script demonstrates schema-level checks and rule management
CREATE EXTENSION pglinter;
-- Create test schemas that should trigger S002 (environment prefixes/suffixes)
CREATE SCHEMA prod_sales;
CREATE SCHEMA dev_analytics;
CREATE SCHEMA testing_data;
CREATE SCHEMA reports_staging;
-- Create a clean schema that should not trigger rules
CREATE SCHEMA business_logic;
-- Create some objects in the schemas to make them more realistic
CREATE TABLE prod_sales.customers (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL
);
CREATE TABLE dev_analytics.metrics (
    id SERIAL PRIMARY KEY,
    metric_name TEXT NOT NULL,
    value NUMERIC
);
CREATE TABLE business_logic.rules (
    id SERIAL PRIMARY KEY,
    rule_name TEXT NOT NULL
);
-- Enable only S002
SELECT pglinter.disable_all_rules();
NOTICE:  üî¥ Disabled 23 rule(s)
 disable_all_rules 
-------------------
                23
(1 row)

SELECT pglinter.enable_rule('S002');
NOTICE:  ‚úÖ Rule S002 has been enabled
 enable_rule 
-------------
 t
(1 row)

-- Test the schema rules
SELECT 'Testing schema rules S002...' as test_info;
          test_info           
------------------------------
 Testing schema rules S002...
(1 row)

-- Run schema check to detect environment-named schemas and default privilege issues
SELECT pglinter.perform_schema_check();
NOTICE:  üîç pglinter found 1 issue(s):
NOTICE:  ==================================================
NOTICE:  ‚ö†Ô∏è  [S002] WARNING: SCHEMA You should not prefix or suffix the schema name with {0}. You may have difficulties when refreshing environments. Prefer prefix or suffix the database name. 3 : 
dev_analytics
prod_sales
reports_staging 

NOTICE:  ==================================================
NOTICE:  üìä Summary: 0 error(s), 1 warning(s), 0 info
NOTICE:  üü° Some warnings found - consider reviewing for optimization
 perform_schema_check 
----------------------
 t
(1 row)

-- Test individual schema rules
SELECT pglinter.explain_rule('S002');
NOTICE:  üìñ Rule Explanation for S002
============================================================

üéØ Rule Name: SchemaPrefixedOrSuffixedWithEnvt
üìã Scope: SCHEMA

üìù Description:
The schema is prefixed with one of staging,stg,preprod,prod,sandbox,sbox string. Means that when you refresh your preprod, staging environments from production, you have to rename the target schema from prod_ to stg_ or something like. It is possible, but it is never easy.

‚ö†Ô∏è  Message Template:
You should not prefix or suffix the schema name with {0}. You may have difficulties when refreshing environments. Prefer prefix or suffix the database name.

üîß How to Fix:
   1. Keep the same schema name across environments. Prefer prefix or suffix the database name
============================================================
 explain_rule 
--------------
 t
(1 row)

-- Test rule management for schema rules
SELECT pglinter.is_rule_enabled('S002') AS s002_enabled;
 s002_enabled 
--------------
 t
(1 row)

-- Test disabling S002 (environment prefixes)
SELECT pglinter.disable_rule('S002') AS s002_disabled;
NOTICE:  üî¥ Rule S002 has been disabled
 s002_disabled 
---------------
 t
(1 row)

SELECT pglinter.perform_schema_check(); -- Should skip S002
NOTICE:  ‚úÖ No issues found - database schema looks good!
 perform_schema_check 
----------------------
 t
(1 row)

-- Re-enable S002
SELECT pglinter.enable_rule('S002') AS s002_reenabled;
NOTICE:  ‚úÖ Rule S002 has been enabled
 s002_reenabled 
----------------
 t
(1 row)

SELECT pglinter.perform_schema_check(); -- Should include S002 again
NOTICE:  üîç pglinter found 1 issue(s):
NOTICE:  ==================================================
NOTICE:  ‚ö†Ô∏è  [S002] WARNING: SCHEMA You should not prefix or suffix the schema name with {0}. You may have difficulties when refreshing environments. Prefer prefix or suffix the database name. 3 : 
dev_analytics
prod_sales
reports_staging 

NOTICE:  ==================================================
NOTICE:  üìä Summary: 0 error(s), 1 warning(s), 0 info
NOTICE:  üü° Some warnings found - consider reviewing for optimization
 perform_schema_check 
----------------------
 t
(1 row)

-- Test the comprehensive check including schemas
SELECT pglinter.check_all();
NOTICE:  üîç Running comprehensive pglinter check...
NOTICE:  
NOTICE:  üìã BASE CHECKS:
NOTICE:  ‚úÖ No issues found - database schema looks good!
NOTICE:  
NOTICE:  üñ•Ô∏è  CLUSTER CHECKS:
NOTICE:  ‚úÖ No issues found - database schema looks good!
NOTICE:  
NOTICE:  üìä TABLE CHECKS:
NOTICE:  ‚úÖ No issues found - database schema looks good!
NOTICE:  
NOTICE:  üóÇÔ∏è  SCHEMA CHECKS:
NOTICE:  üîç pglinter found 1 issue(s):
NOTICE:  ==================================================
NOTICE:  ‚ö†Ô∏è  [S002] WARNING: SCHEMA You should not prefix or suffix the schema name with {0}. You may have difficulties when refreshing environments. Prefer prefix or suffix the database name. 3 : 
dev_analytics
prod_sales
reports_staging 

NOTICE:  ==================================================
NOTICE:  üìä Summary: 0 error(s), 1 warning(s), 0 info
NOTICE:  üü° Some warnings found - consider reviewing for optimization
NOTICE:  
NOTICE:  üéâ All pglinter checks completed successfully!
 check_all 
-----------
 t
(1 row)

DROP SCHEMA prod_sales CASCADE;
NOTICE:  drop cascades to table prod_sales.customers
DROP SCHEMA dev_analytics CASCADE;
NOTICE:  drop cascades to table dev_analytics.metrics
DROP SCHEMA testing_data CASCADE;
DROP SCHEMA reports_staging CASCADE;
DROP SCHEMA business_logic CASCADE;
NOTICE:  drop cascades to table business_logic.rules
DROP EXTENSION pglinter CASCADE;

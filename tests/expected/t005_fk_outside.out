-- Simple example to demonstrate foreign keys referencing tables in other schemas (T005 rule)
-- This script creates tables with foreign keys that reference tables outside their schema
-- and shows how the T005 rule detects this cross-schema dependency issue.
BEGIN;
\pset pager off
-- Create the main/public schema tables (referenced tables)
CREATE TABLE public.customers (
    customer_id SERIAL PRIMARY KEY,
    customer_name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE public.products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    category VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE public.users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(150) UNIQUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
-- Create separate schemas for testing cross-schema foreign keys
DROP SCHEMA IF EXISTS sales_schema CASCADE;
NOTICE:  schema "sales_schema" does not exist, skipping
CREATE SCHEMA sales_schema;
DROP SCHEMA IF EXISTS inventory_schema CASCADE;
NOTICE:  schema "inventory_schema" does not exist, skipping
CREATE SCHEMA inventory_schema;
DROP SCHEMA IF EXISTS audit_schema CASCADE;
NOTICE:  schema "audit_schema" does not exist, skipping
CREATE SCHEMA audit_schema;
-- Create tables in other schemas with foreign keys to public schema tables (should trigger T005)
CREATE TABLE sales_schema.orders (
    order_id SERIAL PRIMARY KEY,
    customer_id INTEGER NOT NULL REFERENCES public.customers(customer_id), -- Cross-schema FK
    order_date DATE NOT NULL DEFAULT CURRENT_DATE,
    total_amount DECIMAL(10,2),
    status VARCHAR(20) DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE sales_schema.order_items (
    item_id SERIAL PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES sales_schema.orders(order_id), -- Same schema FK (OK)
    product_id INTEGER NOT NULL REFERENCES public.products(product_id), -- Cross-schema FK
    quantity INTEGER DEFAULT 1,
    unit_price DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE inventory_schema.product_stock (
    stock_id SERIAL PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES public.products(product_id), -- Cross-schema FK
    warehouse_location VARCHAR(50),
    quantity_available INTEGER DEFAULT 0,
    reorder_level INTEGER DEFAULT 10,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE inventory_schema.stock_movements (
    movement_id SERIAL PRIMARY KEY,
    stock_id INTEGER NOT NULL REFERENCES inventory_schema.product_stock(stock_id), -- Same schema FK (OK)
    movement_type VARCHAR(20) NOT NULL, -- 'in', 'out', 'adjustment'
    quantity_change INTEGER NOT NULL,
    reason TEXT,
    created_by INTEGER REFERENCES public.users(user_id), -- Cross-schema FK
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE audit_schema.user_activity_log (
    log_id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES public.users(user_id), -- Cross-schema FK
    activity_type VARCHAR(50) NOT NULL,
    table_name VARCHAR(100),
    record_id INTEGER,
    old_values JSONB,
    new_values JSONB,
    ip_address INET,
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
-- Create one table within the same schema (should NOT trigger T005)
CREATE TABLE sales_schema.sales_reports (
    report_id SERIAL PRIMARY KEY,
    report_name VARCHAR(100) NOT NULL,
    created_by VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
-- Insert test data to make the tables more realistic
INSERT INTO public.customers (customer_name, email)
VALUES
    ('John Doe', 'john.doe@email.com'),
    ('Jane Smith', 'jane.smith@email.com'),
    ('Bob Johnson', 'bob.johnson@email.com');
INSERT INTO public.products (product_name, price, category)
VALUES
    ('Laptop Computer', 999.99, 'Electronics'),
    ('Office Chair', 199.50, 'Furniture'),
    ('Wireless Mouse', 29.99, 'Electronics'),
    ('Desk Lamp', 49.99, 'Furniture');
INSERT INTO public.users (username, email)
VALUES
    ('admin', 'admin@company.com'),
    ('manager', 'manager@company.com'),
    ('clerk', 'clerk@company.com');
INSERT INTO sales_schema.orders (customer_id, total_amount, status)
VALUES
    (1, 1029.98, 'completed'),
    (2, 199.50, 'pending'),
    (3, 79.98, 'shipped'),
    (1, 49.99, 'completed');
INSERT INTO sales_schema.order_items (order_id, product_id, quantity, unit_price)
VALUES
    (1, 1, 1, 999.99),
    (1, 3, 1, 29.99),
    (2, 2, 1, 199.50),
    (3, 3, 2, 29.99),
    (3, 4, 1, 49.99),
    (4, 4, 1, 49.99);
INSERT INTO inventory_schema.product_stock (product_id, warehouse_location, quantity_available, reorder_level)
VALUES
    (1, 'Warehouse A', 25, 5),
    (2, 'Warehouse B', 50, 10),
    (3, 'Warehouse A', 100, 20),
    (4, 'Warehouse B', 30, 8);
INSERT INTO inventory_schema.stock_movements (stock_id, movement_type, quantity_change, reason, created_by)
VALUES
    (1, 'out', -1, 'Customer order fulfillment', 3),
    (2, 'in', 20, 'New stock delivery', 2),
    (3, 'out', -2, 'Customer order fulfillment', 3),
    (4, 'adjustment', -1, 'Damaged item removal', 1);
INSERT INTO audit_schema.user_activity_log (user_id, activity_type, table_name, record_id, ip_address)
VALUES
    (1, 'INSERT', 'customers', 1, '192.168.1.100'),
    (2, 'UPDATE', 'products', 1, '192.168.1.101'),
    (3, 'DELETE', 'orders', 1, '192.168.1.102'),
    (1, 'SELECT', 'inventory', NULL, '192.168.1.100');
INSERT INTO sales_schema.sales_reports (report_name, created_by)
VALUES
    ('Monthly Sales Report', 'manager'),
    ('Product Performance Report', 'admin'),
    ('Customer Analysis Report', 'manager');
-- Update table statistics
ANALYZE public.customers;
ANALYZE public.products;
ANALYZE public.users;
ANALYZE sales_schema.orders;
ANALYZE sales_schema.order_items;
ANALYZE sales_schema.sales_reports;
ANALYZE inventory_schema.product_stock;
ANALYZE inventory_schema.stock_movements;
ANALYZE audit_schema.user_activity_log;
DROP EXTENSION IF EXISTS pglinter CASCADE;
NOTICE:  extension "pglinter" does not exist, skipping
CREATE EXTENSION IF NOT EXISTS pglinter;
-- Disable all rules first to isolate T005 testing
SELECT 'Disabling all rules to test T005 specifically...' as status;
                      status                      
--------------------------------------------------
 Disabling all rules to test T005 specifically...
(1 row)

SELECT pglinter.disable_all_rules() AS all_rules_disabled;
NOTICE:  üî¥ Disabled 22 rule(s)
 all_rules_disabled 
--------------------
                 22
(1 row)

-- Run table check (should show no results since all rules are disabled)
SELECT 'Running table check with all rules disabled (should show no T005 results):' as test_info;
                                 test_info                                  
----------------------------------------------------------------------------
 Running table check with all rules disabled (should show no T005 results):
(1 row)

SELECT pglinter.perform_table_check();
NOTICE:  ‚úÖ No issues found - database schema looks good!
 perform_table_check 
---------------------
 t
(1 row)

-- Test rule management for T005
SELECT 'Testing T005 rule management:' as test_info;
           test_info           
-------------------------------
 Testing T005 rule management:
(1 row)

SELECT pglinter.explain_rule('T005');
NOTICE:  üìñ Rule Explanation for T005
============================================================

üéØ Rule Name: TableWithFkOutsideSchema
üìã Scope: TABLE

üìù Description:
table with fk outside its schema. This can be problematic for  maintenance and scalability of the database, refreshing staging/preprod from prod, as well as for understanding the data model.  Migration challenges: Moving or restructuring schemas becomes difficult.

‚ö†Ô∏è  Message Template:
foreign key {constraint_name} on {schema}.{table_name} is in schema {referenced_schema}.{referenced_table}.

üîß How to Fix:
   1. consider rewrite your model
   2. ask a dba
============================================================
 explain_rule 
--------------
 t
(1 row)

SELECT pglinter.is_rule_enabled('T005') AS t005_enabled;
 t005_enabled 
--------------
 f
(1 row)

-- Enable T005 specifically
SELECT 'Enabling T005 rule...' as status;
        status         
-----------------------
 Enabling T005 rule...
(1 row)

SELECT pglinter.enable_rule('T005') AS t005_reenabled;
NOTICE:  ‚úÖ Rule T005 has been enabled
 t005_reenabled 
----------------
 t
(1 row)

SELECT pglinter.is_rule_enabled('T005') AS t005_enabled_after;
 t005_enabled_after 
--------------------
 t
(1 row)

-- Run table check to detect tables with cross-schema foreign keys
SELECT 'Running table check with T005 enabled - should detect cross-schema foreign keys:' as test_info;
                                    test_info                                     
----------------------------------------------------------------------------------
 Running table check with T005 enabled - should detect cross-schema foreign keys:
(1 row)

SELECT pglinter.perform_table_check(); -- Should include T005 results
NOTICE:  üîç pglinter found 1 issue(s):
NOTICE:  ==================================================
NOTICE:  ‚ö†Ô∏è  [T005] WARNING: Found 5 table(s) with fk outside its schema : 
foreign key orders_customer_id_fkey on sales_schema.orders is in schema public.customers.
foreign key order_items_product_id_fkey on sales_schema.order_items is in schema public.products.
foreign key product_stock_product_id_fkey on inventory_schema.product_stock is in schema public.products.
foreign key stock_movements_created_by_fkey on inventory_schema.stock_movements is in schema public.users.
foreign key user_activity_log_user_id_fkey on audit_schema.user_activity_log is in schema public.users. 

NOTICE:  ==================================================
NOTICE:  üìä Summary: 0 error(s), 1 warning(s), 0 info
NOTICE:  üü° Some warnings found - consider reviewing for optimization
 perform_table_check 
---------------------
 t
(1 row)

-- Test disabling T005 temporarily
SELECT 'Testing T005 disable/enable cycle:' as test_info;
             test_info              
------------------------------------
 Testing T005 disable/enable cycle:
(1 row)

SELECT pglinter.disable_rule('T005') AS t005_disabled;
NOTICE:  üî¥ Rule T005 has been disabled
 t005_disabled 
---------------
 t
(1 row)

SELECT pglinter.perform_table_check(); -- Should skip T005
NOTICE:  ‚úÖ No issues found - database schema looks good!
 perform_table_check 
---------------------
 t
(1 row)

-- Re-enable T005 and test again
SELECT pglinter.enable_rule('T005') AS t005_re_enabled;
NOTICE:  ‚úÖ Rule T005 has been enabled
 t005_re_enabled 
-----------------
 t
(1 row)

SELECT pglinter.perform_table_check(); -- Should include T005 again
NOTICE:  üîç pglinter found 1 issue(s):
NOTICE:  ==================================================
NOTICE:  ‚ö†Ô∏è  [T005] WARNING: Found 5 table(s) with fk outside its schema : 
foreign key orders_customer_id_fkey on sales_schema.orders is in schema public.customers.
foreign key order_items_product_id_fkey on sales_schema.order_items is in schema public.products.
foreign key product_stock_product_id_fkey on inventory_schema.product_stock is in schema public.products.
foreign key stock_movements_created_by_fkey on inventory_schema.stock_movements is in schema public.users.
foreign key user_activity_log_user_id_fkey on audit_schema.user_activity_log is in schema public.users. 

NOTICE:  ==================================================
NOTICE:  üìä Summary: 0 error(s), 1 warning(s), 0 info
NOTICE:  üü° Some warnings found - consider reviewing for optimization
 perform_table_check 
---------------------
 t
(1 row)

ROLLBACK;

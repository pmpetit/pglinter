-- Test for T008 rule - Tables with foreign key type mismatches
BEGIN;
DROP EXTENSION IF EXISTS pglinter CASCADE;
NOTICE:  extension "pglinter" does not exist, skipping
-- Create parent tables with different types
CREATE TABLE users (
    id BIGSERIAL PRIMARY KEY,
    username TEXT UNIQUE NOT NULL
);
CREATE TABLE categories (
    id SMALLINT PRIMARY KEY,
    name TEXT NOT NULL
);
-- Create child tables with type mismatches
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    user_id INTEGER, -- Type mismatch: should be BIGINT to match users.id
    category_id INTEGER, -- Type mismatch: should be SMALLINT to match categories.id
    total NUMERIC
);
-- Add foreign key constraints that have type mismatches
ALTER TABLE orders
ADD CONSTRAINT fk_orders_user
FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE orders
ADD CONSTRAINT fk_orders_category
FOREIGN KEY (category_id) REFERENCES categories(id);
-- Create a table with correct foreign key types
CREATE TABLE reviews (
    id SERIAL PRIMARY KEY,
    user_id BIGINT, -- Correct type matching users.id
    category_id SMALLINT, -- Correct type matching categories.id
    rating INTEGER
);
-- Add foreign keys with correct types
ALTER TABLE reviews
ADD CONSTRAINT fk_reviews_user
FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE reviews
ADD CONSTRAINT fk_reviews_category
FOREIGN KEY (category_id) REFERENCES categories(id);
-- Insert some test data
INSERT INTO users (username) VALUES ('user1'), ('user2');
INSERT INTO categories (id, name) VALUES (1, 'Electronics'), (2, 'Books');
INSERT INTO orders (user_id, category_id, total) VALUES (1, 1, 99.99);
INSERT INTO reviews (user_id, category_id, rating) VALUES (1, 1, 5);
CREATE EXTENSION IF NOT EXISTS pglinter;
-- Test the T008 rule
SELECT 'Testing T008 rule - Foreign key type mismatches...' as test_info;
                     test_info                      
----------------------------------------------------
 Testing T008 rule - Foreign key type mismatches...
(1 row)

-- Run table check to detect type mismatches
SELECT pglinter.perform_table_check();
ERROR:  missing FROM-clause entry for table "i"
LINE 3:             array_agg(i.indexname) as redundant_indexes
                              ^
QUERY:  
        SELECT t.schemaname, t.tablename,
            array_agg(i.indexname) as redundant_indexes
        FROM (
            SELECT DISTINCT i1.schemaname, i1.tablename, i1.indexname
            FROM pg_indexes i1
            JOIN pg_indexes i2 ON i1.schemaname = i2.schemaname
                AND i1.tablename = i2.tablename
                AND i1.indexname != i2.indexname
            WHERE i1.schemaname NOT IN ('pg_toast', 'pg_catalog', 'information_schema')
            AND EXISTS (
                SELECT 1 FROM pg_index idx1, pg_index idx2, pg_class c1, pg_class c2
                WHERE c1.relname = i1.indexname AND c2.relname = i2.indexname
                AND idx1.indexrelid = c1.oid AND idx2.indexrelid = c2.oid
                AND idx1.indrelid = idx2.indrelid
                AND idx1.indkey = idx2.indkey
            )
        ) t
        GROUP BY t.schemaname, t.tablename
-- Test rule management
SELECT pglinter.explain_rule('T008');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT pglinter.is_rule_enabled('T008') AS t008_enabled;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Test disabling T008
SELECT pglinter.disable_rule('T008') AS t008_disabled;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT pglinter.perform_table_check(); -- Should skip T008
ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Re-enable T008
SELECT pglinter.enable_rule('T008') AS t008_reenabled;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT pglinter.perform_table_check(); -- Should include T008 again
ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Clean up
DROP TABLE reviews CASCADE;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
DROP TABLE orders CASCADE;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
DROP TABLE categories CASCADE;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
DROP TABLE users CASCADE;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK;
